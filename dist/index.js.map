{
  "version": 3,
  "sources": ["../src/useFetch.ts", "../src/useMutation.ts"],
  "sourcesContent": ["import { useCallback, useEffect, useRef, useState } from \"react\";\n\ntype Status = \"success\" | \"pending\" | \"error\";\n\ntype Options<T> = {\n  enabled?: boolean;\n  suspense?: boolean;\n  errorBoundary?: boolean;\n  refetchInterval?: number;\n\n  onSuccess?: (result: T) => void | Promise<void>;\n  onError?: (error: Error) => void;\n};\n\nconst useFetch = <T>(\n  request: () => Promise<T>,\n  {\n    enabled = true,\n    suspense = false,\n    errorBoundary = false,\n    refetchInterval,\n    onSuccess,\n    onError,\n  }: Options<T> = {}\n) => {\n  const [status, setStatus] = useState<Status>(\"pending\");\n  const [promise, setPromise] = useState<Promise<void> | null>(null);\n  const [result, setResult] = useState<T | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const interval = useRef<NodeJS.Timeout | null>(null);\n\n  const resolvePromise = useCallback(\n    (newResult: T) => {\n      setStatus(\"success\");\n      setResult(newResult);\n      onSuccess?.(newResult);\n    },\n    [onSuccess]\n  );\n\n  const rejectPromise = useCallback(\n    (error: Error) => {\n      setStatus(\"error\");\n      setError(error);\n      onError?.(error);\n    },\n    [onError]\n  );\n\n  const fetch = useCallback(() => {\n    setStatus(\"pending\");\n\n    const requestPromise = request().then(resolvePromise, rejectPromise);\n    setPromise(requestPromise);\n\n    return requestPromise;\n  }, []);\n\n  const clearResult = () => setResult(null);\n\n  const clearIntervalRef = () => {\n    if (interval.current === null) return;\n    clearInterval(interval.current);\n    interval.current = null;\n  };\n\n  useEffect(() => {\n    if (!enabled) return;\n\n    fetch();\n\n    if (refetchInterval) {\n      interval.current = setInterval(fetch, refetchInterval);\n      return clearIntervalRef;\n    }\n  }, [enabled, fetch]);\n\n  if (suspense && status === \"pending\" && promise) {\n    throw promise;\n  }\n  if (errorBoundary && status === \"error\") {\n    throw error;\n  }\n\n  return {\n    result,\n    status,\n    isLoading: status === \"pending\",\n    isError: status === \"error\",\n    error: error,\n    clearResult,\n    refetch: fetch,\n  };\n};\n\nexport default useFetch;\n", "import { useEffect, useState } from \"react\";\n\ntype Status = \"default\" | \"pending\" | \"fulfilled\" | \"error\";\n\ntype Options<T> = {\n  errorBoundary?: boolean;\n\n  onSuccess?: (result: T) => void | Promise<void>;\n  onError?: (error: Error) => void;\n};\n\nconst useMutation = <T>(request: () => Promise<T>, { errorBoundary = true, onSuccess, onError }: Options<T> = {}) => {\n  const [result, setResult] = useState<T | null>(null);\n  const [status, setStatus] = useState<Status>(\"default\");\n  const [error, setError] = useState<unknown | null>(null);\n\n  const mutate = async () => {\n    setStatus(\"pending\");\n\n    try {\n      const result = await request();\n      setResult(result);\n      await onSuccess?.(result);\n      setStatus(\"fulfilled\");\n      return result;\n    } catch (reason) {\n      if (reason instanceof Error) {\n        setError(reason);\n        onError?.(reason);\n      }\n      setStatus(\"error\");\n      throw reason;\n    }\n  };\n\n  useEffect(() => {\n    if (errorBoundary && error) {\n      throw error;\n    }\n  }, [error, errorBoundary]);\n\n  return {\n    mutate,\n    result,\n    status,\n    isLoading: status === \"pending\",\n    isError: status === \"error\",\n    error,\n  };\n};\n\nexport default useMutation;\n"],
  "mappings": "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",
  "names": ["error", "useEffect", "useState", "result"]
}
