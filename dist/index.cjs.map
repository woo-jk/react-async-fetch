{
  "version": 3,
  "sources": ["../src/index.ts", "../src/useFetch.ts", "../src/useMutation.ts", "../src/useSuspenseFetch.ts", "../src/promise/PromiseCache.ts", "../src/promise/PromiseHandler.ts"],
  "sourcesContent": ["import useFetch from \"./useFetch\";\nimport useMutation from \"./useMutation\";\nimport useSuspenseFetch from \"./useSuspenseFetch\";\n\nexport { useFetch, useMutation, useSuspenseFetch };\n", "import { useCallback, useEffect, useRef, useState } from \"react\";\n\ntype Status = \"success\" | \"pending\" | \"error\";\n\ntype Options<T> = {\n  enabled?: boolean;\n  suspense?: boolean;\n  errorBoundary?: boolean;\n  refetchInterval?: number;\n\n  onSuccess?: (result: T) => void | Promise<void>;\n  onError?: (error: Error) => void;\n};\n\nconst useFetch = <T>(\n  request: () => Promise<T>,\n  {\n    enabled = true,\n    suspense = false,\n    errorBoundary = false,\n    refetchInterval,\n    onSuccess,\n    onError,\n  }: Options<T> = {}\n) => {\n  const [status, setStatus] = useState<Status>(\"pending\");\n  const [promise, setPromise] = useState<Promise<void> | null>(null);\n  const [result, setResult] = useState<T | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n  const interval = useRef<NodeJS.Timeout | null>(null);\n\n  const resolvePromise = useCallback(\n    (newResult: T) => {\n      setStatus(\"success\");\n      setResult(newResult);\n      onSuccess?.(newResult);\n    },\n    [onSuccess]\n  );\n\n  const rejectPromise = useCallback(\n    (error: Error) => {\n      setStatus(\"error\");\n      setError(error);\n      onError?.(error);\n    },\n    [onError]\n  );\n\n  const fetch = useCallback(() => {\n    setStatus(\"pending\");\n\n    const requestPromise = request().then(resolvePromise, rejectPromise);\n    setPromise(requestPromise);\n\n    return requestPromise;\n  }, []);\n\n  const clearResult = () => setResult(null);\n\n  const clearIntervalRef = () => {\n    if (interval.current === null) return;\n    clearInterval(interval.current);\n    interval.current = null;\n  };\n\n  useEffect(() => {\n    if (!enabled) return;\n\n    fetch();\n\n    if (refetchInterval) {\n      interval.current = setInterval(fetch, refetchInterval);\n      return clearIntervalRef;\n    }\n  }, [enabled, fetch]);\n\n  if (suspense && status === \"pending\" && promise) {\n    throw promise;\n  }\n  if (errorBoundary && status === \"error\") {\n    throw error;\n  }\n\n  return {\n    result,\n    status,\n    isLoading: status === \"pending\",\n    isError: status === \"error\",\n    error: error,\n    clearResult,\n    refetch: fetch,\n  };\n};\n\nexport default useFetch;\n", "import { useEffect, useState } from \"react\";\n\ntype Status = \"default\" | \"pending\" | \"fulfilled\" | \"error\";\n\ntype Options<T> = {\n  errorBoundary?: boolean;\n\n  onSuccess?: (result: T) => void | Promise<void>;\n  onError?: (error: Error) => void;\n};\n\nconst useMutation = <T>(request: () => Promise<T>, { errorBoundary = true, onSuccess, onError }: Options<T> = {}) => {\n  const [result, setResult] = useState<T | null>(null);\n  const [status, setStatus] = useState<Status>(\"default\");\n  const [error, setError] = useState<unknown | null>(null);\n\n  const mutate = async () => {\n    setStatus(\"pending\");\n\n    try {\n      const result = await request();\n      setResult(result);\n      await onSuccess?.(result);\n      setStatus(\"fulfilled\");\n      return result;\n    } catch (reason) {\n      if (reason instanceof Error) {\n        setError(reason);\n        onError?.(reason);\n      }\n      setStatus(\"error\");\n      throw reason;\n    }\n  };\n\n  useEffect(() => {\n    if (errorBoundary && error) {\n      throw error;\n    }\n  }, [error, errorBoundary]);\n\n  return {\n    mutate,\n    result,\n    status,\n    isLoading: status === \"pending\",\n    isError: status === \"error\",\n    error,\n  };\n};\n\nexport default useMutation;\n", "import { useEffect, useRef, useState, useSyncExternalStore } from \"react\";\nimport PromiseHandler from \"./promise/PromiseHandler\";\n\nconst useSuspenseFetch = <T>(requestKey: string, request: () => Promise<T>) => {\n  const keyHistory = useRef(new Set([requestKey])).current;\n  const promiseCache = useSyncExternalStore(PromiseHandler.subscribe, () =>\n    PromiseHandler.get(requestKey, request)\n  );\n\n  useEffect(() => {\n    keyHistory.add(requestKey);\n\n    return () => {\n      PromiseHandler.delete(keyHistory);\n    };\n  }, [requestKey]);\n\n  const invalidateCache = () => {\n    PromiseHandler.delete(requestKey);\n  };\n\n  if (promiseCache.getPromiseStatus() === \"pending\") {\n    throw promiseCache.getPromise();\n  }\n\n  if (promiseCache.getPromiseStatus() === \"rejected\") {\n    throw promiseCache.getError();\n  }\n\n  return {\n    result: promiseCache.getData() as T,\n    status: promiseCache.getPromiseStatus(),\n    error: promiseCache.getError(),\n    invalidateCache,\n  };\n};\n\nexport default useSuspenseFetch;\n", "class PromiseCache<T> {\n  private promise: Promise<T>;\n  private status: \"fulfilled\" | \"pending\" | \"rejected\";\n  private data: T | null;\n  private error: Error | null;\n\n  constructor(promise: Promise<T>) {\n    this.promise = promise;\n    this.status = \"pending\";\n    this.data = null;\n    this.error = null;\n\n    promise.then(\n      (data) => this.resolvePromise(data),\n      (error) => this.rejectedPromise(error)\n    );\n  }\n\n  private resolvePromise(data: T) {\n    this.data = data;\n    this.status = \"fulfilled\";\n  }\n\n  private rejectedPromise(error: Error) {\n    this.error = error;\n    this.status = \"rejected\";\n  }\n\n  retryPromise(promise: Promise<T>) {\n    return promise.then(\n      (data) => this.resolvePromise(data),\n      (error) => this.rejectedPromise(error)\n    );\n  }\n\n  getPromise() {\n    return this.promise;\n  }\n\n  getData() {\n    return this.data;\n  }\n\n  getPromiseStatus() {\n    return this.status;\n  }\n\n  getError() {\n    return this.error;\n  }\n}\n\nexport default PromiseCache;\n", "import PromiseCache from \"./PromiseCache\";\n\nconst promiseHashMap = new Map<string, PromiseCache<any>>();\n\nlet listeners: Array<() => void> = [];\n\nfunction emitChange() {\n  for (const listener of listeners) {\n    listener();\n  }\n}\n\nconst PromiseHandler = {\n  get<T>(key: string, request: () => Promise<T>) {\n    const cachedPromiseHandler = promiseHashMap.get(key);\n\n    if (!cachedPromiseHandler) {\n      const newPromise = request();\n      const promiseCache = new PromiseCache(newPromise);\n\n      promiseHashMap.set(key, promiseCache);\n\n      return promiseCache;\n    }\n\n    return cachedPromiseHandler as PromiseCache<T>;\n  },\n\n  delete(key: string | string[] | Set<string>) {\n    let keys = typeof key === \"string\" ? [key] : key;\n\n    keys.forEach((key) => promiseHashMap.delete(key));\n    emitChange();\n  },\n\n  subscribe(listener: () => void) {\n    listeners = [...listeners, listener];\n    return () => {\n      listeners = listeners.filter((l) => l !== listener);\n    };\n  },\n};\n\nexport default PromiseHandler;\n"],
  "mappings": "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",
  "names": ["error", "import_react", "result", "import_react", "key"]
}
